Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | %empty

    4 token: ID_VAL
    5      | INT_VAL
    6      | INT_TOK
    7      | FLOAT_VAL
    8      | BOOL_TOK
    9      | BVEC2_TOK
   10      | BVEC3_TOK
   11      | BVEC4_TOK
   12      | IVEC2_TOK
   13      | IVEC3_TOK
   14      | IVEC4_TOK
   15      | VEC2_TOK
   16      | VEC3_TOK
   17      | VEC4_TOK
   18      | FLOAT_TOK
   19      | MUL_TOK
   20      | ADD_TOK
   21      | SUB_TOK
   22      | DIV_TOK
   23      | ASSIGN_TOK
   24      | NOT_TOK
   25      | AND_TOK
   26      | OR_TOK
   27      | XOR_TOK
   28      | LS_TOK
   29      | GT_TOK
   30      | TRUE_TOK
   31      | FALSE_TOK
   32      | LPAREN_TOK
   33      | RPAREN_TOK
   34      | LBRACE_TOK
   35      | RBRACE_TOK
   36      | LBRACKET_TOK
   37      | RBRACKET_TOK
   38      | SEMICOL_TOK
   39      | COMMA_TOK
   40      | IF_TOK
   41      | ELSE_TOK
   42      | WHILE_TOK


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_VAL (258) 5
FLOAT_VAL (259) 7
ID_VAL (260) 4
INT_TOK (261) 6
BOOL_TOK (262) 8
BVEC2_TOK (263) 9
BVEC3_TOK (264) 10
BVEC4_TOK (265) 11
IVEC2_TOK (266) 12
IVEC3_TOK (267) 13
IVEC4_TOK (268) 14
VEC2_TOK (269) 15
VEC3_TOK (270) 16
VEC4_TOK (271) 17
FLOAT_TOK (272) 18
MUL_TOK (273) 19
ADD_TOK (274) 20
SUB_TOK (275) 21
DIV_TOK (276) 22
ASSIGN_TOK (277) 23
NOT_TOK (278) 24
AND_TOK (279) 25
OR_TOK (280) 26
XOR_TOK (281) 27
LS_TOK (282) 28
GT_TOK (283) 29
LPAREN_TOK (284) 32
RPAREN_TOK (285) 33
LBRACE_TOK (286) 34
RBRACE_TOK (287) 35
LBRACKET_TOK (288) 36
RBRACKET_TOK (289) 37
SEMICOL_TOK (290) 38
COMMA_TOK (291) 39
TRUE_TOK (292) 30
FALSE_TOK (293) 31
IF_TOK (294) 40
ELSE_TOK (295) 41
WHILE_TOK (296) 42


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
tokens (44)
    on left: 2 3, on right: 1 2
token (45)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    2


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: tokens .
    2 tokens: tokens . token

    INT_VAL       shift, and go to state 4
    FLOAT_VAL     shift, and go to state 5
    ID_VAL        shift, and go to state 6
    INT_TOK       shift, and go to state 7
    BOOL_TOK      shift, and go to state 8
    BVEC2_TOK     shift, and go to state 9
    BVEC3_TOK     shift, and go to state 10
    BVEC4_TOK     shift, and go to state 11
    IVEC2_TOK     shift, and go to state 12
    IVEC3_TOK     shift, and go to state 13
    IVEC4_TOK     shift, and go to state 14
    VEC2_TOK      shift, and go to state 15
    VEC3_TOK      shift, and go to state 16
    VEC4_TOK      shift, and go to state 17
    FLOAT_TOK     shift, and go to state 18
    MUL_TOK       shift, and go to state 19
    ADD_TOK       shift, and go to state 20
    SUB_TOK       shift, and go to state 21
    DIV_TOK       shift, and go to state 22
    ASSIGN_TOK    shift, and go to state 23
    NOT_TOK       shift, and go to state 24
    AND_TOK       shift, and go to state 25
    OR_TOK        shift, and go to state 26
    XOR_TOK       shift, and go to state 27
    LS_TOK        shift, and go to state 28
    GT_TOK        shift, and go to state 29
    LPAREN_TOK    shift, and go to state 30
    RPAREN_TOK    shift, and go to state 31
    LBRACE_TOK    shift, and go to state 32
    RBRACE_TOK    shift, and go to state 33
    LBRACKET_TOK  shift, and go to state 34
    RBRACKET_TOK  shift, and go to state 35
    SEMICOL_TOK   shift, and go to state 36
    COMMA_TOK     shift, and go to state 37
    TRUE_TOK      shift, and go to state 38
    FALSE_TOK     shift, and go to state 39
    IF_TOK        shift, and go to state 40
    ELSE_TOK      shift, and go to state 41
    WHILE_TOK     shift, and go to state 42

    $default  reduce using rule 1 (program)

    token  go to state 43


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 token: INT_VAL .

    $default  reduce using rule 5 (token)


State 5

    7 token: FLOAT_VAL .

    $default  reduce using rule 7 (token)


State 6

    4 token: ID_VAL .

    $default  reduce using rule 4 (token)


State 7

    6 token: INT_TOK .

    $default  reduce using rule 6 (token)


State 8

    8 token: BOOL_TOK .

    $default  reduce using rule 8 (token)


State 9

    9 token: BVEC2_TOK .

    $default  reduce using rule 9 (token)


State 10

   10 token: BVEC3_TOK .

    $default  reduce using rule 10 (token)


State 11

   11 token: BVEC4_TOK .

    $default  reduce using rule 11 (token)


State 12

   12 token: IVEC2_TOK .

    $default  reduce using rule 12 (token)


State 13

   13 token: IVEC3_TOK .

    $default  reduce using rule 13 (token)


State 14

   14 token: IVEC4_TOK .

    $default  reduce using rule 14 (token)


State 15

   15 token: VEC2_TOK .

    $default  reduce using rule 15 (token)


State 16

   16 token: VEC3_TOK .

    $default  reduce using rule 16 (token)


State 17

   17 token: VEC4_TOK .

    $default  reduce using rule 17 (token)


State 18

   18 token: FLOAT_TOK .

    $default  reduce using rule 18 (token)


State 19

   19 token: MUL_TOK .

    $default  reduce using rule 19 (token)


State 20

   20 token: ADD_TOK .

    $default  reduce using rule 20 (token)


State 21

   21 token: SUB_TOK .

    $default  reduce using rule 21 (token)


State 22

   22 token: DIV_TOK .

    $default  reduce using rule 22 (token)


State 23

   23 token: ASSIGN_TOK .

    $default  reduce using rule 23 (token)


State 24

   24 token: NOT_TOK .

    $default  reduce using rule 24 (token)


State 25

   25 token: AND_TOK .

    $default  reduce using rule 25 (token)


State 26

   26 token: OR_TOK .

    $default  reduce using rule 26 (token)


State 27

   27 token: XOR_TOK .

    $default  reduce using rule 27 (token)


State 28

   28 token: LS_TOK .

    $default  reduce using rule 28 (token)


State 29

   29 token: GT_TOK .

    $default  reduce using rule 29 (token)


State 30

   32 token: LPAREN_TOK .

    $default  reduce using rule 32 (token)


State 31

   33 token: RPAREN_TOK .

    $default  reduce using rule 33 (token)


State 32

   34 token: LBRACE_TOK .

    $default  reduce using rule 34 (token)


State 33

   35 token: RBRACE_TOK .

    $default  reduce using rule 35 (token)


State 34

   36 token: LBRACKET_TOK .

    $default  reduce using rule 36 (token)


State 35

   37 token: RBRACKET_TOK .

    $default  reduce using rule 37 (token)


State 36

   38 token: SEMICOL_TOK .

    $default  reduce using rule 38 (token)


State 37

   39 token: COMMA_TOK .

    $default  reduce using rule 39 (token)


State 38

   30 token: TRUE_TOK .

    $default  reduce using rule 30 (token)


State 39

   31 token: FALSE_TOK .

    $default  reduce using rule 31 (token)


State 40

   40 token: IF_TOK .

    $default  reduce using rule 40 (token)


State 41

   41 token: ELSE_TOK .

    $default  reduce using rule 41 (token)


State 42

   42 token: WHILE_TOK .

    $default  reduce using rule 42 (token)


State 43

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
